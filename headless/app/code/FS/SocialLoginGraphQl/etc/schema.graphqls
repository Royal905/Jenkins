 type Mutation {
 	createCustomerTokenSocialLogin (input: CustomerCreateInputSocialLogin! @doc(description: "An input object that defines the customer to be created.")): CustomerOutput @resolver(class: "\\FS\\SocialLoginGraphQl\\Model\\Resolver\\CreateCustomer") @doc(description:"Create a customer account.")
 }

 input CustomerCreateInputSocialLogin  @doc(description: "An input object for creating a customer.") {
    firstname: String! @doc(description: "The customer's first name.")
    middlename: String @doc(description: "The customer's middle name.")
    lastname: String! @doc(description: "The customer's family name.")
    email: String! @doc(description: "The customer's email address.")
    date_of_birth: String @doc(description: "The customer's date of birth.")
    gender: Int @doc(description: "The customer's gender (Male - 1, Female - 2).")
    is_subscribed: Boolean @doc(description: "Indicates whether the customer is subscribed to the company's newsletter.")

}
type CustomerOutput @doc(description: "Contains details about a newly-created or updated customer.") {
    customer: Customer! @doc(description: "Customer details after creating or updating a customer.")
    token: String! @doc(description: "The customer's token after creating customer.")
}