type Mutation {
 updatePaymentInformation(input: PaymentInformationInput!): PaymentInformationOutput
    @resolver(
      class: "\\FS\\RazorpayGraphQl\\Model\\Resolver\\UpdatePaymentResponse"
    )
    @doc(description: "Update Razorpay Payment")

}
input PaymentInformationInput @doc(description: "PaymentInformationInput ") {
  data: [PaymentData!] @doc(description: "")
}

input PaymentData @doc(description: "PaymentData "){
    order_id: String @doc(description: "")
    payment_response: String @doc(description: "")
}

type PaymentInformationOutput @doc(description: "PaymentInformationOutput ") {
  response:  PaymentInformationResponse @doc(description: "")
}

type PaymentInformationResponse @doc(description: "PaymentInformationOutput ") {
  status: String @doc(description: "")
  message: String @doc(description: "")
  subtotal: String @doc(description: "")
  shipping_amount: String @doc(description: "")
  tax_amount: String @doc(description: "")
  items:  [OrderItem] @doc(description: "")
  order_total: String @doc(description: "")
  
}

type OrderItem @doc(description: "OrderItem "){
  name: String @doc(description: "")
  sku: String @doc(description: "")
  image: String @doc(description: "")
  price: String @doc(description: "")
  qty_ordered: String @doc(description: "")

}


type Query {
    checkpaymentstatus( transaction_id: String @doc(description: "transaction_id")): TransactionStatus 
    @resolver(class:"FS\\RazorpayGraphQl\\Model\\Resolver\\CheckPaymentStatus") @doc(description:"")
}

type TransactionStatus @doc(description: "Testcustomer defines the customer name and other details") {
    transaction_id: String @doc(description: "")
    status: String @doc(description: "")
    message: String @doc(description: "")
    
}
